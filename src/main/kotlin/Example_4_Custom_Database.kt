package org.jetbrains.kotlinx.dataframe.examples.jdbc

import org.jetbrains.kotlinx.dataframe.api.print
import org.jetbrains.kotlinx.dataframe.io.readDataFrame
import java.sql.DriverManager
import java.sql.SQLException
//https://www.tutorialspoint.com/hsqldb/hsqldb_quick_guide.htm
fun main() {
    val jdbcUrl = "jdbc:hsqldb:hsql://localhost/testdb"
    val username = "SA"
    val password = ""

    try {
        // Registering the HSQLDB JDBC driver
        Class.forName("org.hsqldb.jdbc.JDBCDriver")

        // Creating the connection with HSQLDB
        DriverManager.getConnection(jdbcUrl, username, password).use { con ->
            if (con != null) {
                println("Connection created successfully")
                var stmt = con.createStatement();

                stmt.executeUpdate("""CREATE TABLE IF NOT EXISTS tutorials_tbl (
                        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, title VARCHAR(50) NOT NULL,
                    author VARCHAR(20) NOT NULL, submission_date DATE,
                    );
                """.trimIndent())

                stmt = con.createStatement();
                stmt.executeUpdate("""INSERT INTO tutorials_tbl (title, author, submission_date) 
                        VALUES ('Learn PHP', 'John Poul', NOW())  """.trimIndent())
                stmt = con.createStatement();
                stmt.executeUpdate("""INSERT INTO tutorials_tbl (title, author, submission_date) 
                        VALUES ('Learn Java', 'John Poul', NOW())""".trimIndent())

                val df = con.readDataFrame("SELECT * FROM tutorials_tbl", dbType = HSQLDB)
                df.print()

                stmt = con.createStatement();
                stmt.executeUpdate("""DROP TABLE tutorials_tbl""");

            } else {
                println("Problem with creating connection")
            }
        }
    } catch (e: ClassNotFoundException) {
        println("HSQLDB JDBC Driver not found. Include it in your library path")
        e.printStackTrace()
    } catch (e: SQLException) {
        println("Connection failed! Check output console")
        e.printStackTrace()
    }
}